{"ast":null,"code":"var _jsxFileName = \"/Users/aks/Desktop/userdirectory/userdirectory/src/components/Directory.js\";\nimport React, { Component } from \"react\";\nimport Employees from \"./Employees.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Directory extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees: [],\n      empSort: [],\n      sorted: false\n    };\n\n    this.componentDidMount = () => {\n      fetch(`https://randomuser.me/api/?results=25&nat=us&inc=name`).then(res => res.json()).then(json => {\n        this.setState({\n          employees: json.results\n        });\n      });\n    };\n\n    this.sortEmp = () => {\n      let {\n        employees\n      } = this.state;\n      let empSort = employees.filter(sorted => {\n        return sorted.name.first.toLowerCase() || sorted.name.last.toLowerCase();\n      });\n      this.setState({\n        empSort\n      });\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jumbotron\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"display-4\",\n            children: \"User Directory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"thead\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [!this.state.sorted ? this.state.employees.map(employee => /*#__PURE__*/_jsxDEV(Employees, {\n                firstName: employee.name.first,\n                lastName: employee.name.last\n              }, employee.id.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this)) : this.state.empSort.map(employee => /*#__PURE__*/_jsxDEV(Employees, {\n                firstName: employee.name.first,\n                lastName: employee.name.last\n              }, employee.id.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)), \";\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n    };\n  }\n\n}\n\nexport default Directory;","map":{"version":3,"sources":["/Users/aks/Desktop/userdirectory/userdirectory/src/components/Directory.js"],"names":["React","Component","Employees","Directory","state","employees","empSort","sorted","componentDidMount","fetch","then","res","json","setState","results","sortEmp","filter","name","first","toLowerCase","last","render","map","employee","id","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CACA;AAAA;AAAA;AAAA,SACIG,KADJ,GACY;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,OAAO,EAAE,EAFL;AAGJC,MAAAA,MAAM,EAAE;AAHJ,KADZ;;AAAA,SAOIC,iBAPJ,GAOsB,MAAI;AAClBC,MAAAA,KAAK,CAAE,uDAAF,CAAL,CACCC,IADD,CACMC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADZ,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,aAAKC,QAAL,CAAc;AAAER,UAAAA,SAAS,EAAEO,IAAI,CAACE;AAAlB,SAAd;AACH,OAJD;AAKH,KAbL;;AAAA,SAcIC,OAdJ,GAcc,MAAM;AACZ,UAAI;AAAEV,QAAAA;AAAF,UAAgB,KAAKD,KAAzB;AACA,UAAIE,OAAO,GAAGD,SAAS,CAACW,MAAV,CAAiBT,MAAM,IAAI;AACrC,eACIA,MAAM,CAACU,IAAP,CAAYC,KAAZ,CAAkBC,WAAlB,MAAmCZ,MAAM,CAACU,IAAP,CAAYG,IAAZ,CAAiBD,WAAjB,EADvC;AAGH,OAJa,CAAd;AAKA,WAAKN,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACH,KAtBL;;AAAA,SAuBQe,MAvBR,GAuBiB,MAAI;AACT,0BACI;AAAA,gCACR;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADQ,eAOR;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAO,YAAA,SAAS,EAAC,OAAjB;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,OAAjB;AAAA,qCACE;AAAA,uCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAME;AAAA,yBACG,CAAC,KAAKjB,KAAL,CAAWG,MAAZ,GAAqB,KAAKH,KAAL,CAAWC,SAAX,CAAqBiB,GAArB,CAAyBC,QAAQ,iBAErD,QAAC,SAAD;AAEE,gBAAA,SAAS,EAAEA,QAAQ,CAACN,IAAT,CAAcC,KAF3B;AAGE,gBAAA,QAAQ,EAAEK,QAAQ,CAACN,IAAT,CAAcG;AAH1B,iBACOG,QAAQ,CAACC,EAAT,CAAYC,KADnB;AAAA;AAAA;AAAA;AAAA,sBAFoB,CAArB,GAQG,KAAKrB,KAAL,CAAWE,OAAX,CAAmBgB,GAAnB,CAAuBC,QAAQ,iBAC/B,QAAC,SAAD;AAEE,gBAAA,SAAS,EAAEA,QAAQ,CAACN,IAAT,CAAcC,KAF3B;AAGE,gBAAA,QAAQ,EAAEK,QAAQ,CAACN,IAAT,CAAcG;AAH1B,iBACOG,QAAQ,CAACC,EAAT,CAAYC,KADnB;AAAA;AAAA;AAAA;AAAA,sBADA,CATN;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPQ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAyCT,KAjEH;AAAA;;AAAA;;AAqEA,eAAetB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Employees from \"./Employees.js\";\n\nclass Directory extends Component\n{\n    state = {\n        employees: [],\n        empSort: [],\n        sorted: false,\n    };\n\n    componentDidMount=()=>{\n        fetch(`https://randomuser.me/api/?results=25&nat=us&inc=name`)\n        .then(res =>res.json())\n        .then(json => {\n            this.setState({ employees: json.results })\n        })\n    };\n    sortEmp = () => {\n        let { employees } = this.state;\n        let empSort = employees.filter(sorted => {\n            return (\n                sorted.name.first.toLowerCase() || sorted.name.last.toLowerCase()\n                )\n        })\n        this.setState({ empSort })\n    }\n        render = ()=>{\n            return(\n                <div>\n        <div className=\"jumbotron\">\n          <h2 className=\"display-4\">\n            User Directory\n          </h2>\n        </div>\n\n        <div className=\"container\">\n          <table className=\"table\">\n            <thead className=\"thead\">\n              <tr>\n                <th>Name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {!this.state.sorted ? this.state.employees.map(employee => (\n\n                <Employees\n                  key={employee.id.value}\n                  firstName={employee.name.first}\n                  lastName={employee.name.last}\n                />\n              ))\n                : this.state.empSort.map(employee => (\n                  <Employees\n                    key={employee.id.value}\n                    firstName={employee.name.first}\n                    lastName={employee.name.last}\n                  />\n\n                ))};\n          </tbody>\n          </table>\n\n        </div>\n\n      </div >\n\n    )\n\n  }\n\n}\n\nexport default Directory;"]},"metadata":{},"sourceType":"module"}