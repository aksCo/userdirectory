[{"/Users/aks/Desktop/userdirectory/userdirectory/src/index.js":"1","/Users/aks/Desktop/userdirectory/userdirectory/src/App.js":"2","/Users/aks/Desktop/userdirectory/userdirectory/src/reportWebVitals.js":"3","/Users/aks/Desktop/userdirectory/userdirectory/src/components/directory.js":"4","/Users/aks/Desktop/userdirectory/userdirectory/src/components/employees.js":"5","/Users/aks/Desktop/userdirectory/userdirectory/src/components/Directory.js":"6","/Users/aks/Desktop/userdirectory/userdirectory/src/components/Employees.js":"7"},{"size":500,"mtime":1620899797609,"results":"8","hashOfConfig":"9"},{"size":213,"mtime":1620905794641,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1620896303433,"results":"11","hashOfConfig":"9"},{"size":1622,"mtime":1620905830294,"results":"12","hashOfConfig":"9"},{"size":251,"mtime":1620905883630,"results":"13","hashOfConfig":"9"},{"size":1622,"mtime":1620905830294,"results":"14","hashOfConfig":"9"},{"size":251,"mtime":1620905883630,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ysoqte",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aks/Desktop/userdirectory/userdirectory/src/index.js",[],"/Users/aks/Desktop/userdirectory/userdirectory/src/App.js",[],"/Users/aks/Desktop/userdirectory/userdirectory/src/reportWebVitals.js",[],"/Users/aks/Desktop/userdirectory/userdirectory/src/components/directory.js",[],"/Users/aks/Desktop/userdirectory/userdirectory/src/components/employees.js",[],"/Users/aks/Desktop/userdirectory/userdirectory/src/components/Directory.js",["31"],"import React, { Component } from \"react\";\nimport Employees from \"./Employees.js\";\n\nclass Directory extends Component\n{\n    state = {\n        employees: [],\n        empSort: [],\n        sorted: false,\n    };\n\n    componentDidMount=()=>{\n        fetch(`https://randomuser.me/api/?results=25&nat=us&inc=name`)\n        .then(res =>res.json())\n        .then(json => {\n            this.setState({ employees: json.results })\n        })\n    };\n    filterEmp = () => {\n        let { employees } = this.state;\n        let filteredemp = employees.filter(employee => {\n            return (\n                employee.name.first.indexOf('A') === 0\n                )\n        })\n        this.setState({ employees:filteredemp})\n    }\n\n   sortedEmp = () => {\n      let { employees } = this.state;\n      let sortedEmp = employees.sort((E1,E2) => {\n          return (\n            E1.name.first > E2.name.first ? 1 : -1\n              )\n      })\n      this.setState({ employees:sortedEmp})\n  }\nrender = () => {\n    \n  return (\n    <div>\n      <div className=\"jumbotron\">\n        <h2 className=\"display-4\">\n          User Directory\n        </h2>\n      </div>\n      <div className =\"container\">\n        <table className=\"table\">\n          <thead className=\"thread\">\n            <tr>\n              <th> Name </th>\n            </tr>\n          </thead>\n          {this.state.employees.map(employee => <tr> <td>{employee.name.first}</td></tr>)}\n        </table>\n        <button onClick={this.filterEmp}> filter by first name A </button>\n        <button onClick={this.sortedEmp}> Sort</button>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default Directory;","/Users/aks/Desktop/userdirectory/userdirectory/src/components/Employees.js",[],{"ruleId":"32","severity":1,"message":"33","line":2,"column":8,"nodeType":"34","messageId":"35","endLine":2,"endColumn":17},"no-unused-vars","'Employees' is defined but never used.","Identifier","unusedVar"]